The file part.info has to be located in the root directory of the 
installation system. If present, the data for the partition suggestion
is read from this file.

The following entries can be present in the file "part.info"

PREFER_REMOVE

    Possible values:   0, 1
    Default value:     1
    Example:           PREFER_REMOVE=1

    Description:
    If set to 0 the partition suggestion tries to use gaps on the 
    disks or to re-use existing partitions.
    If set to 1 then the partition suggestion prefers removal of
    existing partitions.

REMOVE_SPECIAL_PARTITIONS

    Possible values:   0, 1
    Default value:     0
    Example:           REMOVE_SPECIAL_PARTITIONS=0

    Description:
    If set to 0 YaST2 will not remove some special partitions (e.g. 0x12
    Compaq diagnostics, 0xde Dell Utility) if they exists on the disk
    even if PREFER_REMOVE is set to 1.
    If set to 1 YaST2 will remove even those special partitions. 
    Caution: Since some machines are not even bootable any more when these 
    partitions are removed one should really know what he does when 
    setting this to 1.


KEEP_PARTITION_FSYS

    Possible values:   comma separated list of 
                       reiser, xfs, fat, vfat, ext2, ext3, ext4, jfs, ntfs, swap
    Default value:     Empty list
    Example:           KEEP_PARTITION_FSYS=fat,ntfs

    Description:
    Partitions that contain filesystems in that list are not deleted even
    if PREFER_REMOVE is set to 1.


KEEP_PARTITION_ID

    Possible values:   comma separated list of possible partition ids
    Default value:     Empty list
    Example:           KEEP_PARTITION_ID=0x01,0x06,0x07,0x0b,0x0c,0x0e,0x0f

    Description:
    Partitions that have a partition id that is contained in the list are
    not deleted even if PREFER_REMOVE is set to 1.


KEEP_PARTITION_NUM

    Possible values:   comma separated list of partition numbers
    Default value:     Empty list
    Example:           KEEP_PARTITION_ID=1,5,13

    Description:
    Partitions that have a partition number that is contained in the list are
    not deleted even if PREFER_REMOVE is set to 1.

DISKLABEL

    Possible values:  "gpt","msdos","dasd"
    Default value:    none 
    Example:          DISKLABEL=msdos

    Description:
    This describes disklabel will be used for disk. For EFI systems and disks
    larger than 2TB you must use "gpt" disk label.

PARTITION

    Example:          PARTITION mount=/ size=4GB fsys=reiser 

    Description:
    Lines starting with the keyword "PARTITION" describe a partition that is
    to be created for the installation. The attributes of such a partition
    are determined by several keywords that have to be on the same line as
    the partition keyword. These keywords are described in more detail later.
    Of course there can be multiple lines with the PARTITION keyword.

    General remarks to all option values. If there is a blank or a equal 
    sign (=) contained in an option value, the values has to be surrounded 
    by double quotes ("). Values that describe sizes can be followed by the 
    letters kB, MB, GB, TB.

	Keyword: mount
	Example: mount=/
	Description:
	This entry describes the mount point of the partition. For a swap
	partition the special value "swap" has to be used.

	Keyword: fsys
	Example: fsys=reiser
	Description:
	This entry describes the filesystem type created on this partition.
	Possible Filesystem types are: reiser, ext2, ext3, xfs, vfat, jfs, swap
	If no filesystem type is given for a partition, reiserfs is used.

	Keyword: formatopt
	Example: formatopt="-b4096 -m0"
	Description:
	This entry describes the options given to the format command. Multiple
	options have to be separated by blanks. There must not be a blank between
	option letter and option value. This entry is optional.

	Keyword: fstopt
	Example: fstopt=acl,user_xattr
	Description:
	This entry describes the options written to /etc/fstab. Multiple
	options have to be separated by comma. This entry is optional.

	Keyword: label
	Example: label=emil
	Description:
	If the filesystem can have a label, the value of the label is set 
	to this value.

	Keyword: id
	Example: id=0x8E
	Description:
	This keyword makes it possible to create partitions with partition
	ids other than 0x83 (for normal filesystem partitions) or 0x82 (for
	swap partitions). This make it possible to create LVM or MD partitions 
	on a disk. 

	Keyword: size
	Example: size=2GB 
	Example: size=0 
	Example: size=auto 
	Description:
	This keyword determines the size that is at least needed for a 
	partition. A size value of zero means that YaST2 should try to make
	the partition as large as possible after all other demands regarding 
	partition size are fulfilled. The special value of "auto" can be
	given for the /boot and swap partition. If auto is set for a /boot or
	swap partition YaST2 computes a suitable partition size by itself.

	Keyword: sizepct
	Example: sizepct=30
	Description:
	This keyword determines that a partiton should be allocated a certain
	percentage of the available space for installation on a disk. 

	Keyword: maxsize
	Example: maxsize=4GB
	Description:
	This keyword limits the maximal amount of space that is allocated
	to a certain partition. This keyword is only useful in conjunction
	with a size specification by keyword "sizepct" or by an entry of
	"size=0".

	Keyword: increasable
	Example: increasable=1
	Default: increasable=0
	Description:
	After determining the optimal disk usage the partition may be 
	increased if there is unallocated space in the same gap available.
	If this keyword is set, the partition may grow larger than specified
	by the maxsize and sizepct parameter. This keyword is intended to
	avoid having unallocated space on a disk after partitioning if
	possible.

	Keyword: disk
	Example: disk=1
	Example: disk=2
	Description:
	This keyword specifies which partitions should be placed on which
	disks if multiple disks are present in the system. All partions with
	the same disk value will be placed on the same disk. The value after
	the keyword determines the priority of the partition group. Lower 
	numbers mean higher priority. If there are not enough disks in the 
	system a partition group with lower priority is assigned a separate 
	disks before a partition group with higher priority. A partition 
	without disk keyword is implicity assigned the highest priority 0.

	Example:    PARTITION   mount=/var  sizepct=100 disk=3
	            PARTITION   mount=/     size=1GB    disk=2
	            PARTITION   mount=/usr  size=2GB    disk=2
	            PARTITION   mount=/opt  size=2GB    disk=2
	            PARTITION   mount=/home sizepct=100 disk=1

	If in the above example the machine has three disks then each of the
	partition groups gets on a separate disk. So one disk will hold
	/var, another disk will hold /home and another disk will hold
	/, /usr and /opt. 
	If in the above example the machine has only two disks then /home
	will still be on a separate disk (since it has lower priority than
	the other partition groups) and /, /usr, /opt and /var will share 
	the other disk.
	If there is only one disk in the system of course all partitions 
	will be on that disk.


    Algorithms of space allocation

    Space allocation on a disk happens in the following order.
    First all partition get the size allocated that is determined by the
    size parameter of the partition description. If a disk cannot hold the
    sum of these sizes this disk is not considered for installation.
    If all demands by the size parameter are fulfilled and there is still 
    space available on the disk, the partitions which have a parameter "sizepct"
    specified are increased until the size demanded by by "sizepct" is fulfilled.
    If there is still available space on the disk (this normally only can 
    happen if the sum of all sizepct values are below 100), all partitions that 
    are specified with a size of zero are enlarged as far as possible. If a
    "maxsize" is specified for a partition, all enlargement are only done up 
    to the specified maxsize.

    If more than one of the available disks is eligible to hold a certain
    partition set, the disk is selected as follows. If there is a partition
    allocated on that disk that has its size specified by kewords "sizepct"
    or by "size=0" and does not have a "maxsize" value set then the desired
    size for this partition is considered to be unlimited. If a partition
    group contains a partition which an unlimited desired size, the disk
    that maximizes the partition size for the unlimited partitions is
    selected. If all partitions in a partition group are limited in size
    then the smallest disk that can hold the desired sizes of all partitions
    is selected for that partition group.

    If there are multiple partition groups the the partition group with
    the lowest number (means highest priority) get assigned its disk first.
    Afterward the partition group with the next priority gets assigned 
    the optimal disk from the so far unassigned disks.

